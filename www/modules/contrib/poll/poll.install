<?php

/**
 * @file
 * Install, update and uninstall functions for the poll module.
 */

/**
 * Implements hook_schema().
 */
function poll_schema() {
  $schema['poll'] = array(
    'description' => 'Stores poll-specific information for poll nodes.',
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => "The poll's {node}.nid.",
      ),
      'runtime' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The number of seconds past {node}.created during which the poll is open.',
      ),
      'active' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Boolean indicating whether or not the poll is open.',
      ),
    ),
    'primary key' => array('nid'),
    'foreign keys' => array(
      'poll_node' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
    ),
  );

  $schema['poll_choice'] = array(
    'description' => 'Stores information about all choices for all {poll}s.',
    'fields' => array(
      'chid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Unique identifier for a poll choice.',
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {node}.nid this choice belongs to.',
      ),
      'chtext' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The text for this choice.',
        'translatable' => TRUE,
      ),
      'chvotes' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The total number of votes this choice has received by all users.',
      ),
      'color' => array(
        'type' => 'varchar',
        'length' => 7,
        'not null' => TRUE,
        'default' => '#000000',
        'description' => 'The color-code for the choice progress bar.',
        'translatable' => TRUE,
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The sort order of this choice among all choices for the same node.',
      ),
    ),
    'indexes' => array(
      'nid' => array('nid'),
    ),
    'primary key' => array('chid'),
    'foreign keys' => array(
      'choice_node' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
    ),
  );

  $schema['poll_vote'] = array(
    'description' => 'Stores per-{users} votes for each {poll}.',
    'fields' => array(
      'chid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => "The {users}'s vote for this poll.",
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The {poll} node this vote is for.',
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid this vote is from unless the voter was anonymous.',
      ),
      'hostname' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The IP address this vote is from unless the voter was logged in.',
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The timestamp of the vote creation.',
      ),
    ),
    'primary key' => array('nid', 'uid', 'hostname'),
    'foreign keys' => array(
      'poll_node' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
      'voter' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
    'indexes' => array(
      'chid' => array('chid'),
      'hostname' => array('hostname'),
      'uid' => array('uid'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function poll_install() {
  $poll_node_type = array(
    'type' => 'poll',
    'name' => st('Poll'),
    'base' => 'poll',
    'description' => st('A <em>poll</em> is a question with a set of possible responses. A <em>poll</em>, once created, automatically provides a simple running count of the number of votes received for each response.'),
    'custom' => 1,
    'modified' => 1,
    'locked' => 0,
    'is_new' => TRUE,
    'settings' => array(
      'promote_enabled' => FALSE,
      "comment_enabled" => TRUE,
    ),
  );

  $poll_node_type = node_type_set_defaults($poll_node_type);
  node_type_save($poll_node_type);
}

/**
 * Implements hook_enable().
 */
function poll_enable() {
  backdrop_set_message(t('Now that the Poll module has been enabled, <a href="@permissions">ensure permissions are set</a> to allow users to vote.', array('@permissions' => '/admin/config/people/permissions#module-poll')), 'info');
}

/**
 * Implements hook_disable().
 */
function poll_disable() {
  backdrop_set_message(t('The Poll module has been disabled.'), 'info');
}

/**
 * Implements hook_uninstall().
 */
function poll_uninstall() {
  // Delete all poll nodes.
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', 'poll');
  $result = $query->execute();
  if (!empty($result)) {
    $result = array_shift($result);
    foreach ($result as $id => $node) {
      $ids[] = $id;
    }
    entity_delete_multiple('node', $ids);
  }
  backdrop_set_message(t('The Poll module has been uninstalled, all nodes of Poll content type - deleted from the database.'), 'info');
}

/**
 * Implements hook_update_N().
 */
function poll_update_1100() {
  if (!db_field_exists('poll_choice', 'color')) {
    $color = array(
      'type' => 'varchar',
      'length' => 7,
      'not null' => TRUE,
      'default' => '#000000',
      'description' => 'The color-code for the choice progress bar.',
      'translatable' => TRUE,
    );
    db_add_field('poll_choice', 'color', $color);
  }
}
