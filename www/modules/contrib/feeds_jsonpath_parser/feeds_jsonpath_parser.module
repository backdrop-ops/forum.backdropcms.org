<?php
/**
 * @file
 * Parse a JSON document using JSONPath.
 */

/**
 * Defines which commit to checkout from flow/jsonpath.
 */
define('FEEDS_JSONPATH_PARSER_LIBRARY_VERSION', '0.9.1');

/**
 * Implements hook_autoload_info().
 */
function feeds_jsonpath_parser_autoload_info() {
  $autoloads = array(
    'FeedsJSONPathParser' => 'FeedsJSONPathParser.inc',

    // Use proper namespace.
    'Flow\JSONPath\JSONPath' => 'libraries/JSONPath/src/JSONPath.php',
    'Flow\JSONPath\JSONPathException' => 'libraries/JSONPath/src/JSONPathException.php',
    'Flow\JSONPath\JSONPathLexer' => 'libraries/JSONPath/src/JSONPathLexer.php',
    'Flow\JSONPath\JSONPathToken' => 'libraries/JSONPath/src/JSONPathToken.php',
    'Flow\JSONPath\AccessHelper' => 'libraries/JSONPath/src/AccessHelper.php',

    'Flow\JSONPath\AbstractFilter' => 'libraries/JSONPath/src/Filters/AbstractFilter.php',
    'Flow\JSONPath\IndexesFilter' => 'libraries/JSONPath/src/Filters/IndexesFilter.php',
    'Flow\JSONPath\IndexFilter' => 'libraries/JSONPath/src/Filters/IndexFilter.php',
    'Flow\JSONPath\QueryMatchFilter' => 'libraries/JSONPath/src/Filters/QueryMatchFilter.php',
    'Flow\JSONPath\QueryResultFilter' => 'libraries/JSONPath/src/Filters/QueryResultFilter.php',
    'Flow\JSONPath\RecursiveFilter' => 'libraries/JSONPath/src/Filters/RecursiveFilter.php',
    'Flow\JSONPath\SliceFilter' => 'libraries/JSONPath/src/Filters/SliceFilter.php',
  );

  return $autoloads;
}

/**
 * Implements hook_feeds_plugins().
 */
function feeds_jsonpath_parser_feeds_plugins() {
  return array(
    'FeedsJSONPathParser' => array(
      'module' => 'feeds_jsonpath_parser',
      'name' => t('JSONPath parser'),
      'description' => t('Parse JSON files using JSONPath.'),
      'handler' => array(
        'module' => 'feeds_jsonpath_parser',
        'parent' => 'FeedsParser',
        'class' => 'FeedsJSONPathParser',
        'file' => 'FeedsJSONPathParser.inc',
        'path' => backdrop_get_path('module', 'feeds_jsonpath_parser'),
      ),
    ),
  );
}


/******************* Deprecated below this line ********************************/

/**
 * Implements hook_libraries_info().
 *
 * Remains only for requirements check.
 *
 * @see feeds_jsonpath_parser.install
 */
function feeds_jsonpath_parser_libraries_info() {
  $libraries = array();

  $libraries['jsonpath'] = array(
    'name' => 'JSONPath',
    'vendor url' => 'https://github.com/SoftCreatR/JSONPath',
    'download url' => 'https://github.com/SoftCreatR/JSONPath/archive/refs/tags/' . FEEDS_JSONPATH_PARSER_LIBRARY_VERSION . '.zip',
    'version' => '9.0.1',
  );

  return $libraries;
}

/**
 * Callback for xautoload.
 *
 * @see feeds_jsonpath_parser_libraries_info()
 */
function _feeds_jsonpath_parser_xautoload_callback($adapter) {
  try {
    $adapter->composerJson('composer.json');
  }
  catch (Exception $e) {
    backdrop_set_message($e->getMessage(), 'error', FALSE);
  }
}
